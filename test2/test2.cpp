// test2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <vector>
#include <algorithm>



int main()
{
    std::setlocale(LC_ALL, "rus");

    //Возвращает при вводе отрицательного числа
errorLogic:
errorNum:
    std::cout << "Введите последовательность положительных чисел: ";
    //Динамический массив для хранения последовательности
    std::vector<int>arrayNum;
    char yn = 'y';
    //Цикл для ввода последовательности
    while (yn == 'y')
    {
        int num{ 0 };
        std::cin >> num;
        //Проверка на число
        if (num < 0 || num>9)
        {
            std::cout << "Введите числа, то есть от 0 до 9 включительно!!!!" << std::endl;
            goto errorNum;
        }
        std::cout << "\n";
        arrayNum.push_back(num);
    errorYn:
        std::cout << "Чтобы завершить нажмите \"n\", чтобы продолжить - \"y\": ";
        std::cin >> yn;
        if (yn != 'y' && yn != 'n')
        {
            std::cout << "Введите либо \"y\", либо \"n\"!!!" << std::endl;
            goto errorYn;
        }
        if (yn == 'y')
        {
            std::cout << "Следующее число: ";
        }
    }


    int minNum = 0;
    for (int indexOne = 0; indexOne < arrayNum.size(); indexOne++)
    {
        for (int indexTwo = 0; indexTwo < arrayNum.size(); indexTwo++)
        {
            if (arrayNum[indexTwo] < arrayNum[indexOne])
                minNum = arrayNum[indexTwo];
        }
    }
    std::cout << "Ваша последовательность чисел: ";
    for (int index = 0; index < arrayNum.size(); index++)
    {
        std::cout << arrayNum[index] << " ";
    }
    std::cout<<std::endl<< "Минимальное число: " << minNum << std::endl;
    
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
